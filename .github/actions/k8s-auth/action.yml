name: Entur/Meta/KubernetesAuth
description: Authenticate with Kubernetes cluster
inputs:
  environment:
    description: "The target environment"
    required: true
  cloud_provider:
    description: "Which cloud service provider to use - Google Cloud: 'gcp' or Azure: 'az'"
    default: "gcp"
  github_token:
    description: "GitHub token"
    required: true
  project_id:
    description: "Google Cloud project ID, required when using Google Cloud"
  cluster_name:
    description: "Name of the Kubernetes cluster, required when using Azure"
  gcp_cluster_location:
    description: "Location of the Kubernetes cluster, GCP option"
    default: "europe-west1"
  azure_cluster_resource_group:
    description: "Azure cluster resource group, required when using Azure"

runs:
  using: "composite"
  steps:
    - id: verify-cloud-provider
      if: inputs.cloud_provider != 'gcp' && inputs.cloud_provider != 'az'
      shell: bash
      env:
        GHA_CLOUD_AUTH_CLOUD_PROVIDER: ${{ inputs.cloud_provider }}
      run: |
        echo "Invalid cloud provider input: ${GHA_CLOUD_AUTH_CLOUD_PROVIDER}"
        echo "Valid options are: 'gcp' or 'az'"
        exit 1
    - id: credentials-gke
      name: Authenticate with Google Cloud
      if: inputs.cloud_provider == 'gcp' && (inputs.cluster_name == '' && inputs.project_id == '')
      uses: google-github-actions/get-gke-credentials@v1
      with:
        project_id: "ent-kub-${{inputs.environment}}"
        cluster_name: "kub-ent-${{inputs.environment}}-001"
        location: ${{ inputs.gcp_cluster_location }}
    - id: credentials-gke-custom
      name: Authenticate with Google Cloud (Custom Clusters)
      if: inputs.cloud_provider == 'gcp' && (inputs.cluster_name != '' && inputs.project_id != '')
      uses: google-github-actions/get-gke-credentials@v1
      with:
        project_id: ${{ inputs.project_id }}
        cluster_name: ${{ inputs.cluster_name }}
        location: ${{ inputs.gcp_cluster_location }}
    - id: kubelogin-azure
      name: Authenticate with Azure Kubernetes cluster
      if: inputs.cloud_provider == 'az'
      uses: azure/use-kubelogin@v1
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}
      with:
        kubelogin-version: "latest"
    - id: set-context-azure
      name: Set context for Azure Kubernetes cluster
      if: inputs.cloud_provider == 'az'
      uses: azure/aks-set-context@v3
      with:
        resource-group: ${{ inputs.azure_cluster_resource_group }}
        cluster-name: ${{ inputs.cluster_name }}
        admin: false
        use-kubelogin: true
